version: "3.8"

services:
  mock-api-container:
    build:
      context: .
      dockerfile: Dockerfile.mockapi
    networks:
      - mm-app-network
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-container:5432/mockapi
      - OPENAI_API_KEY={your-openai-api-key} # 폴백용 키
      - LLM_SERVICE_URL=http://local-llm-container:8000
      - NODE_ENV=production
      - NEXT_PUBLIC_BASE_PATH=/mockapi
    depends_on:
      postgres-container:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/llm/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  postgres-container:
    image: postgres:16-alpine
    networks:
      - mm-app-network
    environment:
      - POSTGRES_DB=mockapi
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mockapi"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  local-llm-container:
    build:
      context: .
      dockerfile: Dockerfile.llm
    networks:
      - mm-app-network
    ports:
      - "8000:8000"
    environment:
      - MODEL_PATH=LGAI-EXAONE/EXAONE-4.0-1.2B
      - ENVIRONMENT=production
      - TZ=Asia/Seoul
    volumes:
      - llm_health_logs:/tmp
    healthcheck:
      test: ["CMD", "/app/health_check.sh"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  # nginx 프록시용 셈플
  # nginx-container:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.nginx
  #   ports:
  #     - "8720:8720"
  #   depends_on:
  #     - mock-api-container
  #     - postgres-container
  #     - local-llm-container
  #   networks:
  #     - mm-app-network
  #   restart: unless-stopped

networks:
  mm-app-network:

volumes:
  postgres_data:
  llm_health_logs:
